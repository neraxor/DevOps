name: .NET CI and Docker Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore DevOps.sln

    - name: Build
      run: dotnet build DevOps.sln --no-restore

    - name: Run tests
      run: dotnet test DevOps.sln --no-build --verbosity normal

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./DevOps
        file: ./DevOps/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/devops:latest

    - name: Log out from Docker Hub
      run: docker logout
        
    - name: Log in to Portainer
      run: |
        curl -s -X POST -d "username=${{ secrets.PORTAINER_USERNAME }}&password=${{ secrets.PORTAINER_PASSWORD }}" ${{ secrets.PORTAINER_URL }}/api/auth | jq -r .jwt > portainer.jwt
        echo "Portainer JWT: $(cat portainer.jwt)"

    - name: Debug Portainer Stack IDs
      run: |
        STACKS=$(curl -s -H "Authorization: Bearer $(cat portainer.jwt)" ${{ secrets.PORTAINER_URL }}/api/stacks)
        echo "Stacks: $STACKS"
        STACK_ID=$(echo $STACKS | jq -r '.[] | select(.Name=="devops-stack") | .Id')
        echo "Stack ID: $STACK_ID"

    - name: Update Portainer stack test
      run: |
        STACK_ID=$(curl -s -H "Authorization: Bearer $(cat portainer.jwt)" ${{ secrets.PORTAINER_URL }}/api/stacks | jq -r '.[] | select(.Name=="devops-stack") | .Id')
        echo "Updating stack with ID: $STACK_ID"
        curl -s -X PUT -H "Authorization: Bearer $(cat portainer.jwt)" -H "Content-Type: application/json" --data '{"Prune":true}' ${{ secrets.PORTAINER_URL }}/api/stacks/${STACK_ID}/update
