name: .NET CI and Docker Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore DevOps.sln

    - name: Build
      run: dotnet build DevOps.sln --no-restore

    - name: Run tests
      run: dotnet test DevOps.sln --no-build --verbosity normal

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./DevOps
        file: ./DevOps/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/devops:latest

    - name: Log out from Docker Hub
      run: docker logout
 
    - name: Log in to Portainer
      run: |
        echo "Logging in to Portainer..."
        AUTH_RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" -d '{"username":"${{ secrets.PORTAINER_USERNAME }}","password":"${{ secrets.PORTAINER_PASSWORD }}"}' ${{ secrets.PORTAINER_URL }}/api/auth)
        echo "Auth Response: $AUTH_RESPONSE"
        JWT=$(echo $AUTH_RESPONSE | jq -r .jwt)
        echo "Portainer JWT: $JWT"
        echo $JWT > portainer.jwt

    - name: Debug Portainer Stack IDs
      run: |
        echo "Fetching stacks from Portainer..."
        RESPONSE=$(curl -s -H "Authorization: Bearer $(cat portainer.jwt)" ${{ secrets.PORTAINER_URL }}/api/stacks)
        echo "Response: $RESPONSE"
        STACK_ID=$(echo $RESPONSE | jq -r '.[] | select(.Name=="devops-stack") | .Id')
        echo "Stack ID: $STACK_ID"
        echo $STACK_ID > stack_id.txt

    - name: Verify Stack ID
      run: |
        echo "Reading Stack ID from file..."
        cat stack_id.txt

    - name: Update Portainer stack
      run: |
        echo "Updating stack with ID from file..."
        STACK_ID=$(cat stack_id.txt)
        echo "Updating stack with ID: $STACK_ID"
        UPDATE_URL="${{ secrets.PORTAINER_URL }}/api/stacks/${STACK_ID}/update"
        echo "Update URL: $UPDATE_URL"
        UPDATE_RESPONSE=$(curl -s -X PUT -H "Authorization: Bearer $(cat portainer.jwt)" -H "Content-Type: application/json" --data '{"Prune":true}' $UPDATE_URL)
        echo "Update Response: $UPDATE_RESPONSE"
